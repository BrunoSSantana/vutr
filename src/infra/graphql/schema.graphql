type Tool {
  id: ID!
  title: String
  link: String
  description: String
  tags: [Tag]

  createdAt: String
  updatedAt: String
}

type User {
  id: ID!
  name: String
  email: String
  externalId: String
  bio: String
  tools: [Tool]
}

type SearchUser {
  name: String
  email: String
}

type Tag {
  id: ID!
  title: String
}

type Pagination {
  page: Int
  limit: Int
}

type Query {
  listTools(search: String, page: Int, limit: Int): [Tool]

  listUsers: (pagination: Pagination, search: SearchUser ): [User]
}

# type AddToolMutationResponse {
#   code: String!
#   success: Boolean!
#   message: String!
#   tool: Tool
# }

type Mutation {
  createTool(title: String, link: String, description: String): Tool
  deleteTool(toolId: ID!): Boolean

  createUser(name: String, email: String, externalId: String, bio: String): Boolean
  updateUser(id: String!, name: String, email: String, externalId: String, bio: String): Boolean
}