version: '3.8'

services:
  db-local:
    profiles:
      - local
    image: bitnami/postgresql:latest
    hostname: db-local
    restart: unless-stopped
    ports:
      - '${DATABASE_PORT:?DATABASE_PORT env var is missing on .env file}:${DATABASE_PORT}'
    environment:
      POSTGRES_DB: ${DATABASE_NAME:?DATABASE_NAME env var is missing on .env file}
      POSTGRES_USER: ${DATABASE_USERNAME:?DATABASE_USERNAME env var is missing on .env file}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:?DATABASE_PASSWORD env var is missing on .env file}
    volumes:
      - ./data/db-local:/var/lib/postgresql/data

  db-test:
    profiles:
      - test
    image: bitnami/postgresql:latest
    hostname: db-test
    restart: unless-stopped
    ports:
      - '${DATABASE_PORT:?DATABASE_PORT env var is missing on .env file}:${DATABASE_PORT}'
    environment:
      POSTGRES_DB: ${DATABASE_NAME:?DATABASE_NAME env var is missing on .env file}
      POSTGRES_USER: ${DATABASE_USERNAME:?DATABASE_USERNAME env var is missing on .env file}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:?DATABASE_PASSWORD env var is missing on .env file}

  # api-local:
  #   profiles:
  #     - local
  #   build:
  #     context: .
  #     dockerfile: ./build/local/Dockerfile
  #   hostname: api-local
  #   restart: unless-stopped
  #   ports:
  #     - '${API_PORT:?API_PORT env var is missing on .env file}:5432'
  #   env_file:
  #     - .env
  #   environment:
  #     NODE_ENV: 'local'
  #     DATABASE_HOST: 'db-local'
  #     DATABASE_PORT: '5432'
  #     DATABASE_URL: 'postgresql://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@db-local:5432/${DATABASE_NAME}?schema=public'
  #   volumes:
  #     - ./src:/home/node/src
  #   depends_on:
  #     - db-local
  